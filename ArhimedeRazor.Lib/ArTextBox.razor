@using Syncfusion.Blazor.Inputs
@if(Id !=string.Empty && ToolTipContent!= string.Empty)
{
<ArToolTip Content="@ToolTipContent" Target="@Id"></ArToolTip>
}
<SfTextBox ID=@Id Readonly="@Readonly" @bind-Value="Value" FloatLabelType="FloatLabelType.Auto" Placeholder="@Placeholder" Multiline=@Multiline ValueChange="@ValueChangeHandler"></SfTextBox>


@code {
    [Parameter] public string Value { get; set; }
    [Parameter] public string Placeholder { get; set; }
    [Parameter] public EventCallback<string> ValueChanged {get;set;}
    /// <summary>
    /// Make TextBox multiline (good for description fields)
    /// </summary>
    [Parameter] public bool Multiline { get; set; } = false;
    /// <summary>
    /// Readonly state of the component
    /// 
    /// Default is <c>false</c>
    /// </summary>
    [Parameter] public bool Readonly { get; set; } = false;
    /// <summary>
    /// The tooltip text of the component
    /// 
    /// Default is <c>false</c>
    /// </summary>
    [Parameter] public string ToolTipContent { get; set; } = string.Empty;
    /// <summary>
    /// Make TextBox multiline (good for description fields)
    /// </summary>
    [Parameter] public string Id { get; set; } = string.Empty;
    
    private async Task ValueChangeHandler(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
        await ValueChanged.InvokeAsync(args.Value.ToString());
    }
}
