@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.SplitButtons
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using SelectionType = Syncfusion.Blazor.Grids.SelectionType
@typeparam TValue

<SfGrid @ref="Grid" TValue="TValue" AllowPaging=true AllowExcelExport=true AllowFreezeLineMoving=true AllowSorting=true AllowTextWrap=true AllowPdfExport=true AllowFiltering=true Toolbar="@(UseDefaultToolbar? Toolbar : null)">
    <GridSelectionSettings Mode="Syncfusion.Blazor.Grids.SelectionMode.Row" Type="SelectionType.Single"></GridSelectionSettings>
    <GridFilterSettings ShowFilterBarStatus=true ImmediateModeDelay="1000" Mode="FilterBarMode.Immediate" Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
    <GridEvents TValue="TValue" OnToolbarClick="ToolbarClickHandler"></GridEvents>
    <ArDataManager URL=@URL></ArDataManager>
    @if (UseDefaultToolbar)
    {
        <GridEditSettings AllowDeleting="true" AllowAdding=true AllowEditing=true Mode="EditMode.Dialog" ShowDeleteConfirmDialog=true></GridEditSettings>
    }
    else
    {
        <GridEditSettings AllowDeleting="true" ShowDeleteConfirmDialog=true></GridEditSettings>
    }
    <GridPageSettings PageSize=@PageSize CurrentPage="1"></GridPageSettings>
    <GridTemplates>
        <ToolbarTemplate>
            @if (!UseDefaultToolbar)
            {
                <ArToolbar AddTooltipText="Adauga inregistrare noua" AddUrl="@AddUrl" ExcelExportMethod="ExportExcel" HeaderText="@HeaderText">
                    <AdditionalToolbars>
                        <ToolbarItem Id="delete" PrefixIcon="e-delete" Text="Delete" TooltipText="Delete Record"></ToolbarItem>
                        @AdditionalToolbars
                    </AdditionalToolbars>
                </ArToolbar>
            }
            else
            {
                <ToolbarItem Id="add" PrefixIcon="add" Text="Add" TooltipText="Add Record"></ToolbarItem>
                <ToolbarItem Id="edit" PrefixIcon="edit" Text="Edit" TooltipText="Edit Record"></ToolbarItem>
                <ToolbarItem Id="delete" PrefixIcon="delete" Text="Delete" TooltipText="Delete Record"></ToolbarItem>
                @AdditionalToolbars
            }
        </ToolbarTemplate>
    </GridTemplates>

    @if (ArGridColumns != null)
    {
        <GridColumns>
            @ArGridColumns
        </GridColumns>
    }
    @ChildContent
</SfGrid>

@code {
    [Parameter] public string URL { get; set; }
    [Parameter] public string AddUrl { get; set; }
    [Parameter] public string HeaderText { get; set; }
    [Parameter] public RenderFragment ArGridColumns { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public int PageSize { get; set; } = 10;
    [Parameter] public bool UseDefaultToolbar { get; set; } = false;
    [Parameter] public RenderFragment AdditionalToolbars { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; }
    [Inject] public SfDialogService SfDialogService { get; set; }
    private SfGrid<TValue> Grid { get; set; }
    private List<string> Toolbar { get; set; } = new List<string>() { "Add", "Edit", "Delete", "ExcelExport" };

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Text == "Add")
        {
            await Grid.AddRecordAsync();
        }
        if (args.Item.Id == "edit")
        {
            await Grid.StartEditAsync();
        }
        if (args.Item.Text == "delete")
        {
            await Grid.DeleteRecordAsync();
            await Grid.Refresh();
        }
    }

    private async void ExportExcel()
    {
        ExcelExportProperties ExportProperties = new ExcelExportProperties();
        ExcelTheme Theme = new ExcelTheme();
        ExcelStyle ThemeStyle = new ExcelStyle()
            {
                FontName = "Segoe UI",
                FontColor = "#666666",
                FontSize = 10
            };
        Theme.Header = ThemeStyle;
        ExportProperties.FileName = $"{HeaderText}" + ".xlsx";
        ExportProperties.ExportType = ExportType.AllPages;
        ExportProperties.Theme = Theme;
        await Grid.ExportToExcelAsync();
    }
    private async void DeleteRecord()
    {
       
    }
}
